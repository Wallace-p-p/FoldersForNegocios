// Shortcode para a página do cliente
add_shortcode( 'pagina_do_cliente', 'exibir_pagina_cliente' );
function exibir_pagina_cliente() {
	// Força a remoção de scripts problemáticos apenas nesta página
	add_action( 'wp_print_scripts', 'remover_scripts_conflitantes', 100 );
	function remover_scripts_conflitantes() {
		// Tenta desregistrar o script problemático do fancybox
		wp_dequeue_script( 'fancybox' );
		wp_dequeue_script( 'fancybox-init' );
		// Adicionar aqui outros handles de scripts conflitantes se necessário
	}
	// Chama a função uma vez para limpar os scripts
	remover_scripts_conflitantes();
    // 1. Pegar CPF da URL
    if ( ! isset( $_GET['cpf'] ) || empty( $_GET['cpf'] ) ) {
        return '<p>CPF não informado. Acesse através do portal.</p>';
    }
    $cpf = sanitize_text_field( $_GET['cpf'] );

    // 2. Buscar dados do cliente no Formidable
    global $wpdb;
    $cliente_data = $wpdb->get_row( $wpdb->prepare(
        "SELECT m_nome.meta_value as nome, 
                m_negocios.meta_value as negocios,
                m_arquivos.meta_value as arquivos
         FROM {$wpdb->prefix}frm_items i
         INNER JOIN {$wpdb->prefix}frm_item_metas m_cpf ON i.id = m_cpf.item_id AND m_cpf.field_id = 16
         INNER JOIN {$wpdb->prefix}frm_item_metas m_nome ON i.id = m_nome.item_id AND m_nome.field_id = 15
         INNER JOIN {$wpdb->prefix}frm_item_metas m_negocios ON i.id = m_negocios.item_id AND m_negocios.field_id = 18
         INNER JOIN {$wpdb->prefix}frm_item_metas m_arquivos ON i.id = m_arquivos.item_id AND m_arquivos.field_id = 19
         WHERE m_cpf.meta_value = %s",
        $cpf
    ));

    if ( ! $cliente_data ) {
        return '<p>Cliente não encontrado.</p>';
    }

    // 3. Processar strings dos negócios e arquivos
    $negocios_array = explode( ';', $cliente_data->negocios );
    $arquivos_array = explode( ';', $cliente_data->arquivos );

    // 4. Iniciar output HTML
    ob_start();
    ?>
    <h2>Bem-vindo(a), <?php echo esc_html( $cliente_data->nome ); ?></h2>
    
    <div class="abas-negocios">
        <ul class="nav nav-tabs" role="tablist">
            <?php foreach ( $negocios_array as $index => $negocio ) : 
                $negocio_slug = sanitize_title( $negocio ); ?>
                <li class="nav-item">
                    <a class="nav-link <?php echo $index === 0 ? 'active' : ''; ?>" 
                       id="tab-<?php echo $negocio_slug; ?>" 
                       data-toggle="tab" 
                       href="#content-<?php echo $negocio_slug; ?>" 
                       role="tab">
                       <?php echo esc_html( trim( $negocio ) ); ?>
                    </a>
                </li>
            <?php endforeach; ?>
        </ul>

        <div class="tab-content">
            <?php foreach ( $negocios_array as $index => $negocio ) : 
                $negocio_slug = sanitize_title( $negocio );
                $arquivo_url = isset( $arquivos_array[$index] ) ? trim( $arquivos_array[$index] ) : '';
                ?>
                <div class="tab-pane fade <?php echo $index === 0 ? 'show active' : ''; ?>" 
                     id="content-<?php echo $negocio_slug; ?>" 
                     role="tabpanel">

                      <div class="sub-abas">
                                <div class="sub-aba-links">
                                    <button class="sub-aba-link active" onclick="mostrarSubAba(event, 'arquivos-<?php echo $negocio_slug; ?>')">Arquivos</button>
                                    <button class="sub-aba-link" onclick="mostrarSubAba(event, 'caracteristicas-<?php echo $negocio_slug; ?>')">Características</button>
                                </div>

                                <div id="arquivos-<?php echo $negocio_slug; ?>" class="sub-aba-conteudo" style="display: block;">
                                    <?php if ( ! empty( $arquivo_url ) ) : ?>
                                        [advanced_iframe src="<?php echo esc_url( $arquivo_url ); ?>" 
                                            width="100%" 
                                            height="600"
                                            onload_resize="true"
                                            enable_responsive_iframe="true"]
                                    <?php else : ?>
                                        <p>Nenhum arquivo disponível para este negócio.</p>
                                    <?php endif; ?>
                                </div>

                                <div id="caracteristicas-<?php echo $negocio_slug; ?>" class="sub-aba-conteudo" style="display: none;">
                                    <?php 
                                    $dados_notion = consultar_notion( trim( $negocio ) );
                                    exibir_dados_notion( $dados_notion );
                                    ?>
                                </div>
                            </div>

                            <style>
                            .sub-aba-links { margin-bottom: 15px; }
                            .sub-aba-link { 
                                padding: 10px 20px; 
                                border: 1px solid #ccc; 
                                background: #f0f0f0; 
                                cursor: pointer; 
                                margin-right: 5px;
                            }
                            .sub-aba-link.active { 
                                background: #0073aa; 
                                color: white; 
                            }
                            .sub-aba-conteudo { 
                                display: none;
                                padding: 15px;
                                border: 1px solid #ddd;
                            }
                            </style>

                            <script>
                            // Verifica se a função já existe antes de declarar
                            if (typeof mostrarSubAba !== 'function') {
                                function mostrarSubAba(event, abaId) {
                                    try {
                                        // Encontra o container de sub-abas mais próximo
                                        var container = event.target.closest('.sub-abas');
                                        
                                        // Esconde todos os conteúdos de sub-abas DESTE container
                                        var conteudos = container.querySelectorAll('.sub-aba-conteudo');
                                        conteudos.forEach(function(conteudo) {
                                            conteudo.style.display = 'none';
                                        });
                                        
                                        // Mostra apenas a aba selecionada
                                        var abaAlvo = document.getElementById(abaId);
                                        if (abaAlvo) {
                                            abaAlvo.style.display = 'block';
                                        }
                                        
                                        // Atualiza estado ativo dos botões DESTE container
                                        var botoes = container.querySelectorAll('.sub-aba-link');
                                        botoes.forEach(function(botao) {
                                            botao.classList.remove('active');
                                        });
                                        event.target.classList.add('active');
                                    } catch (error) {
                                        console.error('Erro em mostrarSubAba:', error);
                                    }
                                }
                            }
                            </script>
                </div>
            <?php endforeach; ?>
        </div>
    </div>

    <!-- Adicionar CSS e JS necessário para as abas -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <style>
    .nav-tabs .nav-link.active {
        border-bottom-color: #fff;
    }
    .tab-content {
        padding: 20px;
        border: 1px solid #dee2e6;
        border-top: none;
    }
    </style>
    <?php
    return ob_get_clean();
}

// Função para consultar API do Notion (baseada no seu código Python)
function consultar_notion( $filter_name ) {
    $database_id = '25e3e73881c3802d9d8cea8ae5ad0b06';
    if ( ! defined( 'NOTION_API_KEY' ) ) {
        return array( 'error' => 'Chave da API não configurada.' );
    }
    
    $api_key = NOTION_API_KEY; // Usa a constante diretamente
	// DEBUG TEMPORÁRIO: Mostrar a chave na página
    echo '<!-- DEBUG: API Key = ' . esc_html( $api_key ) . ' -->';
    $url = "https://api.notion.com/v1/databases/{$database_id}/query";
    $headers = array(
        'Authorization' => 'Bearer ' . $api_key,
        'Content-Type' => 'application/json',
        'Notion-Version' => '2022-06-28'
    );
    
    $filters = array( "and" => array() );
    if ( $filter_name ) {
        $filters["and"][] = array(
            "property" => "Name",
            "title" => array( "contains" => $filter_name )
        );
    }
    
    $payload = ( ! empty( $filters["and"] ) ) ? array( "filter" => $filters ) : array();
    
    $response = wp_remote_post( $url, array(
        'headers' => $headers,
        'body' => json_encode( $payload ),
        'timeout' => 30
    ));
    
    if ( is_wp_error( $response ) ) {
        return array( 'error' => $response->get_error_message() );
    }
    
    $body = wp_remote_retrieve_body( $response );
    return json_decode( $body, true );
}

// Função para exibir dados do Notion (VERSÃO DEBUG)
// Função para exibir dados do Notion (VERSÃO PRODUÇÃO)
function exibir_dados_notion( $dados ) {
    if ( isset( $dados['error'] ) ) {
        return '<p>Erro ao consultar API: ' . esc_html( $dados['error'] ) . '</p>';
    }
    
    if ( empty( $dados['results'] ) ) {
        return '<p>Nenhum dado encontrado para este negócio.</p>';
    }
    
    echo '<hr><h4>📋 Dados do empreendimento:</h4>';
    echo '<div class="propriedades-notion">';
    foreach ( $dados['results'] as $resultado ) {
        $props = $resultado['properties'];
        echo '<div class="propriedade">';
        foreach ( $props as $nome_prop => $detalhes_prop ) {
            // Não exibe propriedades vazias ou sem valor
            $valor = extrair_valor_notion( $detalhes_prop );
            if ( ! empty( $valor ) ) {
                echo '<div class="propriedade-item">';
                echo '<strong>' . esc_html( $nome_prop ) . ':</strong> ';
                echo esc_html( $valor );
                echo '</div>';
            }
        }
        echo '</div>';
    }
    echo '</div>';
}

// Função auxiliar para extrair valores do Notion (Atualizada para Multiselect e Select)
function extrair_valor_notion( $propriedade ) {
    $tipo = $propriedade['type'];
    
    switch ( $tipo ) {
        case 'title':
            return $propriedade['title'][0]['plain_text'] ?? '';
        case 'rich_text':
            return $propriedade['rich_text'][0]['plain_text'] ?? '';
        case 'number':
            return $propriedade['number'] ?? '';
        case 'select':
            return $propriedade['select']['name'] ?? ''; // Já funcionava para select simples
        case 'multi_select':
            // Para multiselect, precisamos extrair vários valores
            if ( ! empty( $propriedade['multi_select'] ) ) {
                $nomes = array();
                foreach ( $propriedade['multi_select'] as $item ) {
                    $nomes[] = $item['name'];
                }
                return implode( ', ', $nomes ); // Retorna "Valor1, Valor2, Valor3"
            }
            return '';
        case 'date':
            return $propriedade['date']['start'] ?? '';
        case 'formula':
            // Fórmula pode retornar string, number, boolean ou date
            $subtipo = $propriedade['formula']['type'] ?? '';
            switch ( $subtipo ) {
                case 'string':
                    return $propriedade['formula']['string'] ?? '';
                case 'number':
                    return $propriedade['formula']['number'] ?? '';
                case 'boolean':
                    return $propriedade['formula']['boolean'] ? 'Sim' : 'Não';
                case 'date':
                    return $propriedade['formula']['date']['start'] ?? '';
                default:
                    return '';
            }
        case 'checkbox':
            return $propriedade['checkbox'] ? 'Sim' : 'Não';
        case 'url':
            return $propriedade['url'] ?? '';
        case 'email':
            return $propriedade['email'] ?? '';
        case 'phone_number':
            return $propriedade['phone_number'] ?? '';
        case 'people':
            // Para propriedade do tipo People (usuários)
            if ( ! empty( $propriedade['people'] ) ) {
                $nomes = array();
                foreach ( $propriedade['people'] as $pessoa ) {
                    $nomes[] = $pessoa['name'] ?? '';
                }
                return implode( ', ', $nomes );
            }
            return '';
        case 'relation':
            // Para propriedade do tipo Relation (relação com outra database)
            if ( ! empty( $propriedade['relation'] ) ) {
                // Notion retorna apenas IDs das páginas relacionadas
                // Seria necessário fazer outra chamada API para buscar os títulos
                return count( $propriedade['relation'] ) . ' itens relacionados';
            }
            return '';
        default:
            return 'Tipo: ' . $tipo; // Útil para debug de tipos não tratados
    }
}